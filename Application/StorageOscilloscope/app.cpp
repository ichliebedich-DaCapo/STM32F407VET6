//
// Created by DV on 2024/12/9.
//
/*
 * D     ------> 1：MOSI
 * Q     ------> 2：MISO
 * C     ------> 3：SCLOCK
 * S     ------> 4：CS
 */
#include <cstdio>
#include "key.hpp"
#include "w25qxx.h"
#include "timer.h"
#include "spi.h"

// -----------宏定义-----------
// 读取数据基址000
#define  READ_DATA_BASE (((volatile unsigned short *)0x60000000))
// 分数分频器的整数部分
#define FREQ_N (*((volatile unsigned short *)0x60010000))
// 分数分频器的小数部分的分子与分母
#define FREQ_M_P (*((volatile unsigned short *)0x60010002))
// 读取命令 010
#define READ_COMMAND (*((volatile unsigned short *)0x60020000))
// 切换触发模式命令011
#define SWITCH_TRIGGER_MODE (*((volatile unsigned short *)0x60030000))

//全局变量
uint16_t continuous_read_times = 0;//连续读取次数
//标志
bool read_flag = false;
bool continuous_read_flag = true;
bool latch_data_flag = false;
//变量
uint8_t read_wave[400];//读取到的临时数组
uint16_t j=0;//测试用
uint8_t temp = 0;
//uint16_t test_data[1600] = {
//        51,56,50,44,52,49,40,36,40,50,
//        59,52,51,59,59,62,58,67,64,73,
//        63,69,63,56,49,42,52,51,47,49,
//        56,47,53,49,49,46,44,37,28,25,
//        24,25,19,19,26,34,32,32,42,35,
//        31,30,25,32,25,28,28,28,20,18,
//        9,7,3,0,0,0,6,3,0,10,
//        11,14,6,0,3,4,2,8,9,3,
//        13,4,0,0,7,0,0,7,6,3,
//        0,0,3,10,10,11,19,21,12,19,
//        28,35,38,30,40,39,46,40,47,37,
//        35,37,36,28,22,21,31,24,25,16,
//        15,11,19,23,32,27,21,12,17,16,
//        16,14,14,11,16,21,22,32,40,30,
//        25,31,34,27,25,26,31,32,31,37,
//        47,57,52,44,35,33,32,33,43,36,
//        34,35,30,22,29,28,20,23,13,13,
//        6,0,0,0,0,0,0,0,0,0,
//        0,6,8,1,6,10,7,0,5,5,
//        3,4,6,0,4,0,0,2,7,4,
//        13,8,14,13,7,0,10,14,24,30,
//        24,32,25,33,34,27,30,24,34,36,
//        40,31,34,43,37,45,49,42,45,39,
//        40,48,48,45,43,47,53,47,51,60,
//        62,65,59,57,59,54,52,48,38,36,
//        26,36,45,35,34,32,41,41,37,38,
//        30,31,37,42,51,54,56,54,49,50,
//        41,46,49,51,50,45,52,45,39,36,
//        39,41,45,45,45,54,56,54,62,55,
//        58,57,59,62,66,65,57,49,40,36,
//        43,52,42,48,43,43,48,48,49,54,
//        47,52,59,55,63,54,44,50,48,50,
//        40,35,38,35,44,44,54,51,52,56,
//        49,53,45,45,40,30,26,16,16,22,
//        31,27,27,26,36,30,31,34,27,20,
//        10,20,26,25,16,21,25,35,27,34,
//        28,37,28,32,41,37,30,33,25,34,
//        41,42,42,39,30,39,32,28,38,45,
//        41,43,39,32,24,24,21,16,21,16,
//        19,21,24,31,24,18,26,24,29,21,
//        20,25,19,17,21,12,3,9,15,7,
//        0,5,0,0,0,10,6,14,9,2,
//        8,8,0,9,0,3,8,16,9,1,
//        2,0,0,8,16,19,12,18,12,10,
//        4,11,5,10,7,12,3,13,21,21,
//        27,25,25,29,36,46,53,45,41,31,
//        38,46,46,55,49,50,58,62,61,52,
//        60,56,54,62,58,57,66,70,79,86,
//        89,97,100,106,97,94,87,91,93,98,
//        98,105,108,108,111,112,122,117,122,126,
//        129,135,135,137,135,129,131,137,129,122,
//        117,121,117,120,126,135,136,140,134,132,
//        131,141,131,138,128,126,131,122,119,112,
//        115,125,125,129,129,125,128,136,138,137,
//        133,127,119,120,129,119,126,133,141,139,
//        136,131,137,134,141,138,138,141,148,139,
//        149,150,155,165,172,182,190,182,178,185,
//        182,181,174,170,165,175,176,168,162,164,
//        165,163,164,157,149,148,151,141,143,139,
//        139,132,128,120,112,116,111,106,104,100,
//        108,99,103,99,102,107,102,106,99,99,
//        99,95,96,101,107,109,104,113,107,115,
//        118,121,120,123,118,127,126,129,132,133,
//        138,144,143,148,141,145,139,134,129,136,
//        126,122,122,113,107,98,105,96,91,83,
//        92,100,91,85,79,74,64,71,75,82,
//        76,69,77,68,68,58,64,62,69,68,
//        62,59,55,49,41,44,42,46,56,54,
//        50,53,50,43,48,58,57,54,53,48,
//        43,37,34,40,46,52,55,59,49,47,
//        41,49,47,53,51,46,47,42,49,55,
//        57,60,54,53,51,55,47,49,55,50,
//        44,42,37,28,36,45,40,45,50,51,
//        51,50,49,59,58,58,63,73,68,71,
//        72,73,81,87,77,82,72,65,55,57,
//        54,46,46,50,60,55,50,58,68,70,
//        76,77,71,77,69,59,54,61,56,48,
//        38,34,44,41,49,45,54,48,40,45,
//        36,32,25,20,30,40,44,45,40,43,
//        36,37,27,30,34,35,33,23,18,16,
//        7,2,11,5,12,22,12,4,12,12,
//        10,9,0,0,3,12,9,0,0,0,
//        9,1,10,16,22,32,33,40,40,31,
//        32,41,40,42,35,27,19,12,13,21,
//        16,26,24,31,28,28,25,22,17,10,
//        11,13,19,13,22,15,6,16,14,15,
//        23,17,17,18,14,9,14,20,11,7,
//        11,7,4,13,23,14,9,0,0,0,
//        9,0,1,2,4,0,0,7,7,6,
//        3,11,18,15,10,2,0,0,10,0,
//        0,0,0,6,8,8,5,13,20,12,
//        14,18,23,32,32,42,47,40,39,45,
//        37,37,35,31,35,37,37,33,41,40,
//        47,47,48,52,60,50,47,40,42,32,
//        42,32,30,38,41,37,44,40,35,34,
//        33,35,44,35,37,42,51,54,46,49,
//        54,55,63,65,70,77,82,81,83,77,
//        83,80,85,90,86,88,90,99,108,105,
//        105,98,100,109,116,121,117,126,120,117,
//        110,109,102,95,99,101,108,103,108,113,
//        107,108,104,95,97,98,106,108,103,106,
//        101,99,96,103,109,111,114,111,107,101,
//        108,100,97,105,114,118,125,132,141,133,
//        136,146,149,146,148,143,141,135,140,133,
//        135,136,131,129,127,133,139,147,142,133,
//        143,141,140,141,148,158,166,168,170,175,
//        168,159,162,153,161,157,167,166,159,163,
//        170,161,162,161,166,164,173,177,167,174,
//        166,175,180,172,182,180,177,169,168,160,
//        151,147,145,135,132,127,123,132,127,123,
//        124,119,120,117,126,124,128,118,116,125,
//        129,122,125,130,127,127,117,113,120,123,
//        119,116,106,110,107,104,104,113,117,119,
//        113,119,110,114,108,102,101,111,116,112,
//        109,99,100,94,84,93,91,82,76,74,
//        83,73,79,83,82,78,69,64,54,55,
//        63,70,73,77,69,66,62,65,59,53,
//        54,56,51,52,59,58,49,56,53,46,
//        54,54,52,50,56,65,67,72,63,53,
//        51,46,36,38,39,30,27,23,33,39,
//        34,33,23,33,24,22,27,24,27,26,
//        22,30,36,29,22,16,15,11,8,12,
//        7,0,0,0,8,0,1,0,9,0,
//        0,9,0,4,0,0,0,5,5,4,
//        9,0,0,1,2,0,0,1,0,0,
//        0,7,4,0,6,10,8,16,7,0,
//        9,6,0,6,13,16,25,19,28,30,
//        32,27,30,27,19,27,25,23,22,32,
//        34,36,40,33,40,46,43,41,34,35,
//        33,36,29,24,18,16,19,25,21,20,
//        21,27,17,19,21,17,24,26,16,15,
//        17,22,29,27,27,28,36,32,22,29,
//        23,13,4,5,1,0,0,0,0,3,
//        7,17,16,21,27,23,22,21,31,21,
//        11,3,5,2,3,0,3,0,0,5,
//        0,5,3,10,17,25,18,26,18,25,
//        23,22,17,23,33,30,40,41,33,25,
//        22,25,18,14,7,1,0,7,17,25,
//        16,14,17,27,37,33,41,34,41,45,
//        43,51,46,56,60,56,63,70,79,89,
//        97,91,96,105,102,109,109,104,101,103,
//        112,113,121,120,123,113,120,119,116,126,
//        126,126,117,114,104,94,94,94,101,101,
//        94,95,91,93,91,101,93,94,92,99,
//        97,105,95,99,94,100,93,101,110,120,
//        128,135,131,141,136,144,153,146,152,150,
//        146,136,131,127,128,137,129,123,116,120,
//        117,116,115,121,120,125,132,122,127,125,
//        129,129,119,116,108,104,95,99,106,110,
//        109,111,107,116,112,121,122,123,124,115,
//        117,107,104,106,103,106,101,94,86,77,
//        76,84,91,93,99,101,98,94,89,99,
//        104,112,110,107,114,113,104,102,101,110,
//        104,99,98,103,111,115,106,102,109,113,
//        104,106,99,99,100,101,109,99,98,108,
//        99,101,95,88,95,99,94,89,95,95,
//        86,80,76,71,65,60,66,72,64,61,
//        51,41,48,52,48,58,49,44,49,56,
//        57,48,47,41,32,26,29,23,14,19,
//        19,9,10,8,1,4,9,11,18,11

};

void  app_init()

{
    spi2_init();
    w25qxx_init();
    timer6_init(FREQ_84M_to_100);// 分频为16KHz
    //w25qxx_sector_erase(0);

    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
    HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);


    HAL_Delay(50);
    HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
    HAL_Delay(60);
    HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);

}

void key_handler()
{
    switch (Key::getCode())
    {
        case keyk0://启闭后台读取任务
            if (Key::stateHandler(KEY_STATE_NONE))
            {
                read_flag = !read_flag;
            }

            break;

        case keyk1://切换单次触发和连续触发模式
            if (Key::stateHandler(KEY_STATE_NONE))
            {
                continuous_read_flag = !continuous_read_flag;

            }
            break;


        case keyk2://启闭锁存模式
            if (Key::stateHandler(KEY_STATE_NONE))
            {

                latch_data_flag = !latch_data_flag;

            }
            break;

        case keyk3://图像左移
            // 测试1：测试写入数据
//        w25qxx_buffer_write_uint16(test_data,0,400);

            UI_Interface::left_shift(read_wave);
            break;
            // 测试2：测试读取数据
        case keyk4://图像右移
//        w25qxx_buffer_read_uint16(read_wave,0,400);

            UI_Interface::right_shift(read_wave);
            break;
            // 测试3：测试擦除扇区

        case keyk5://切换程控放大器放大倍数
            w25qxx_sector_erase(0);
            __BKPT(0);
            break;
            // 测试4：测试读取数据
        case keyk6://测试程序
            read_flag = !read_flag;
            break;


        case keykB:
            // 测试读命令
            temp += 1;
            break;
        case keykC:
            temp--;
            break;

        case keykE://设置频率字
            FREQ_N = temp;
            FREQ_M_P = 0;
            break;

        case keykF://重置FPGA
            HAL_Delay(50);
            HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
            HAL_Delay(60);
            HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
            break;

        default:
            break;
    }
}
//最终测试记得取消注释
void background_handler()
{
    if (read_flag)
    {
        // 发送读取数据命令
        READ_COMMAND = 0x000;// 传入参数0
        // 等待数据传输完成
        while (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_5));//PC5是等待引脚
        //读取数据
        for (int i = 0; i < 400; i++)
        {
        read_wave[i] = READ_DATA_BASE[i];
//            read_wave[i] = test_data[j];
//            j++;
//            if (j == 1600) {
//                j = 0; // 重置计数器
//            }
//            read_wave[i]=HAL_GetTick()&0xFF;
        }
        if (latch_data_flag)
        {
//        w25qxx_buffer_write_uint16(read_wave, continuous_read_times * 400, 400);//这里存储数据到flash
            continuous_read_times++;
        }
        //绘制波形
        UI_Interface::display(read_wave);
        if (!continuous_read_flag)
        {
            read_flag = false;
            continuous_read_times=0;
        }
    }
}




