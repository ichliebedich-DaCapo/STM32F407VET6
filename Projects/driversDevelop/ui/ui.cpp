// Generated by Fairy on 2025-02-27  21:20

/*!INCLUDES_BEGIN!*/
#include "ui.hpp"

/*!INCLUDES_END!*/

// 组件定义 
namespace gui::widgets::main 
{
	Image img_screen_img_1;
	Chart chart_screen_chart_1;
	Button btn_screen_btn_1;
	Label label_screen_btn_1_label;
	Button btn_screen_btn_2;
	Label label_screen_btn_2_label;
	Button btn_screen_btn_3;
	Label label_screen_btn_3_label;
	Button btn_screen_btn_4;
	Label label_screen_btn_4_label;
	Button btn_screen_btn_5;
	Label label_screen_btn_5_label;
	Slider slider_screen_slider_1;
	Label label_screen_label_1;
	Label label_screen_label_2;
	Button btn_screen_btn_6;
	Label label_screen_btn_6_label;
	Button btn_screen_btn_7;
	Label label_screen_btn_7_label;
	Label label_screen_label_3;
/*!WIDGETS_DEFINE_BEGIN!*/

/*!WIDGETS_DEFINE_END!*/
}
using namespace gui::widgets::main;


/*!DECLARE_CODE_BEGIN!*/
// 全局变量定义

// 类声明

/*!DECLARE_CODE_END!*/


namespace gui::init
{
    void screen() 
    {
		scr.bg_color(lv_color_hex(0xffffff))
			.bg_grad_dir(LV_GRAD_DIR_NONE);

		img_screen_img_1.init()
			.pos(405, 5)
			.size(61, 42)
			.add_flag(LV_OBJ_FLAG_CLICKABLE)
			.src(&_dianzisheji_RGB565A8_61x42)
			.pivot(50, 50)
			.image_recolor_opa(0);

		chart_screen_chart_1.init()
			.pos(18, 8)
			.size(375, 227)
			.scrollbar_mode(LV_SCROLLBAR_MODE_OFF)
			.div_count(11, 15)
			.point_count(5)
			.range(LV_CHART_AXIS_PRIMARY_Y, 0, 100)
			.range(LV_CHART_AXIS_SECONDARY_Y, 0, 100)
			.bg_color(lv_color_hex(0xffffff))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.border_width(1)
			.border_opa(255)
			.border_color(lv_color_hex(0xe8e8e8))
			.border_side(LV_BORDER_SIDE_FULL)
			.radius(0)
			.line_width(2)
			.line_color(lv_color_hex(0xe8e8e8))
			.line_opa(255);

		btn_screen_btn_1.init()
			.pos(409, 59)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_1_label.init(btn_screen_btn_1)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		btn_screen_btn_2.init()
			.pos(409, 129)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_2_label.init(btn_screen_btn_2)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		btn_screen_btn_3.init()
			.pos(18, 265)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_3_label.init(btn_screen_btn_3)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		btn_screen_btn_4.init()
			.pos(115, 265)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_4_label.init(btn_screen_btn_4)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		btn_screen_btn_5.init()
			.pos(215, 265)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_5_label.init(btn_screen_btn_5)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		slider_screen_slider_1.init()
			.pos(18, 246)
			.size(370, 5)
			.range(0, 100)
			.value(50)
			.bg_opa(60)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(50)
			.outline_width(0)
			.bg_opa(255, static_cast<int>(LV_PART_INDICATOR)|static_cast<int>(LV_STATE_DEFAULT))
			.bg_color(lv_color_hex(0x2195f6), static_cast<int>(LV_PART_INDICATOR)|static_cast<int>(LV_STATE_DEFAULT))
			.bg_grad_dir(LV_GRAD_DIR_NONE, static_cast<int>(LV_PART_INDICATOR)|static_cast<int>(LV_STATE_DEFAULT))
			.radius(50, static_cast<int>(LV_PART_INDICATOR)|static_cast<int>(LV_STATE_DEFAULT))
			.bg_opa(255, static_cast<int>(LV_PART_KNOB)|static_cast<int>(LV_STATE_DEFAULT))
			.bg_color(lv_color_hex(0x2195f6), static_cast<int>(LV_PART_KNOB)|static_cast<int>(LV_STATE_DEFAULT))
			.bg_grad_dir(LV_GRAD_DIR_NONE, static_cast<int>(LV_PART_KNOB)|static_cast<int>(LV_STATE_DEFAULT))
			.radius(50, static_cast<int>(LV_PART_KNOB)|static_cast<int>(LV_STATE_DEFAULT));

		label_screen_label_1.init()
			.pos(409, 97)
			.size(49, 19)
			.text("Label")
			.radius(0)
			.text_color(lv_color_hex(0x000000))
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER)
			.bg_opa(0);

		label_screen_label_2.init()
			.pos(409, 174)
			.size(52, 25)
			.text("Label")
			.radius(0)
			.text_color(lv_color_hex(0x000000))
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER)
			.bg_opa(0);

		btn_screen_btn_6.init()
			.pos(316, 265)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_6_label.init(btn_screen_btn_6)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		btn_screen_btn_7.init()
			.pos(409, 205)
			.size(54, 28)
			.pad_all(0, LV_STATE_DEFAULT)
			.bg_color(lv_color_hex(0x2195f6))
			.bg_grad_dir(LV_GRAD_DIR_NONE)
			.radius(5)
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER);

		label_screen_btn_7_label.init(btn_screen_btn_7)
			.text("Button")
			.center()
			.width(LV_PCT(100));

		label_screen_label_3.init()
			.pos(409, 246)
			.size(52, 25)
			.text("Label")
			.radius(0)
			.text_color(lv_color_hex(0x000000))
			.font(&lv_customer_font_SourceHanSerifSC_Regular_13)
			.text_align(LV_TEXT_ALIGN_CENTER)
			.bg_opa(0);
    /*!INIT_CUSTOM_BEGIN!*/

    /*!INIT_CUSTOM_END!*/
    }
    
    void events()
    {
    /*!EVENTS_CUSTOM_BEGIN!*/
    
    /*!EVENTS_CUSTOM_END!*/
    }
}



/*!UI_IMPLEMENT_BEGIN!*/
// 用户自定义接口实现区（安全编辑区） 
namespace gui::interface {


}
/*!UI_IMPLEMENT_END!*/


/*!DEFINE_CODE_BEGIN!*/
// 类定义

/*!DEFINE_CODE_END!*/
